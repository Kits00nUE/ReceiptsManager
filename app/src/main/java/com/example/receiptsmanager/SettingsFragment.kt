package com.example.receiptsmanager

import android.app.AlertDialog
import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.Button
import androidx.fragment.app.Fragment

class SettingsFragment : Fragment() {
    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {
        val view = inflater.inflate(R.layout.fragment_settings, container, false)

        // Pobranie referencji do przycisk√≥w
        val buttonInstruction = view.findViewById<Button>(R.id.btn_instruction)
        val buttonFaq = view.findViewById<Button>(R.id.btn_faq)

        // Obs≈Çuga klikniƒôcia przycisku "Instrukcja"
        buttonInstruction.setOnClickListener {
            showInstructionDialog()
        }

        // Obs≈Çuga klikniƒôcia przycisku "FAQ"
        buttonFaq.setOnClickListener {
            showFaqDialog()
        }

        return view
    }

    // Funkcja wy≈õwietlajƒÖca instrukcjƒô obs≈Çugi
    private fun showInstructionDialog() {
        val instructionText = """
        üìå **Instrukcja obs≈Çugi aplikacji ‚ÄûParagony‚Äù** üìå
        
        üîπ **Cel aplikacji:** 
        Aplikacja pozwala na zapisywanie, przeglƒÖdanie i udostƒôpnianie paragon√≥w.

        ‚úÖ **Jak dodaƒá nowy paragon?**
        1Ô∏è‚É£ Przejd≈∫ do zak≈Çadki **Home** (üè†).  
        2Ô∏è‚É£ Wpisz nazwƒô paragonu w polu tekstowym.  
        3Ô∏è‚É£ Kliknij **‚ÄûZr√≥b zdjƒôcie‚Äù** ‚Äì otworzy siƒô aparat.  
        4Ô∏è‚É£ Zr√≥b zdjƒôcie i zatwierd≈∫ ‚Äì paragon zostanie zapisany w pamiƒôci.

        üîç **Jak przeglƒÖdaƒá paragony?**
        1Ô∏è‚É£ Przejd≈∫ do zak≈Çadki **Paragony** (üìú).  
        2Ô∏è‚É£ Znajdziesz tam listƒô zapisanych paragon√≥w.  
        3Ô∏è‚É£ Kliknij nazwƒô paragonu, aby zobaczyƒá jego pe≈Çny podglƒÖd.  

        üì§ **Jak udostƒôpniƒá paragon?**
        1Ô∏è‚É£ W zak≈Çadce **Paragony** kliknij przycisk **‚Äûüì§ Udostƒôpnij‚Äù** obok wybranego paragonu.  
        2Ô∏è‚É£ Wybierz aplikacjƒô, przez kt√≥rƒÖ chcesz udostƒôpniƒá zdjƒôcie.  

        üóë **Jak usunƒÖƒá paragon?**
        1Ô∏è‚É£ Kliknij ikonƒô kosza **‚Äûüóë Usu≈Ñ‚Äù** obok wybranego paragonu.  
        2Ô∏è‚É£ Paragon zostanie trwale usuniƒôty z aplikacji.  

        üîî **Powiadomienia:**  
        Po dodaniu nowego paragonu pojawi siƒô powiadomienie potwierdzajƒÖce jego zapis.  

        ‚ÑπÔ∏è **Dodatkowe informacje:**  
        - Aplikacja nie przechowuje paragon√≥w w chmurze ‚Äì wszystkie dane sƒÖ lokalne.  
        - Po usuniƒôciu paragonu **nie mo≈ºna go odzyskaƒá**.  

        ‚úÖ **Gotowe! Teraz mo≈ºesz bezpiecznie zarzƒÖdzaƒá swoimi paragonami.**
    """.trimIndent()

        AlertDialog.Builder(requireContext())
            .setTitle("üìñ Instrukcja obs≈Çugi")
            .setMessage(instructionText)
            .setPositiveButton("OK") { dialog, _ -> dialog.dismiss() }
            .show()
    }


    // Funkcja wy≈õwietlajƒÖca ≈ºartobliwe FAQ
    private fun showFaqDialog() {
        val message = """
            ‚ùì FAQ
            
            üîπ Jak dzia≈Ça gwarancja?
            üìù "Gwarancja - do bramy i siƒô nie znamy!"
        """.trimIndent()

        AlertDialog.Builder(requireContext())
            .setTitle("FAQ")
            .setMessage(message)
            .setPositiveButton("OK") { dialog, _ -> dialog.dismiss() }
            .show()
    }

}
